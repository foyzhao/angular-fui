@charset "UTF-8";
/* reset */
html {
  box-sizing: border-box;
  font: normal 14px 'Microsoft YaHei UI', 'Microsoft YaHei UI Light', 'sans-serif';
}
body {
  margin: 0;
  padding: 0;
  font-size: 1rem;
}
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;
  font-size: 1rem;
}
ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none;
}
/*element*/
input {
  outline: none;
  border-radius: 4px;
  transition: .2s;
  font-size: 1rem;
  height: 2.22em;
  line-height: 1em;
  box-sizing: border-box;
  padding: 0 .6em;
  border: 1px solid #CCC;
}
input.small {
  font-size: .88rem;
}
input.big {
  font-size: 1.24rem;
}
input:focus {
  border-color: #618dc2;
}
input[type=checkbox],
input[type=radio] {
  height: auto;
}
checkbox {
  display: inline-block;
  cursor: pointer;
  font-size: 1rem;
}
checkbox:before {
  content: " ";
  font-weight: bold;
  color: #FFF;
  display: inline-block;
  width: 1em;
  height: 1em;
  line-height: 1em;
  background-color: #FFF;
  border: 1px solid #618dc2;
  border-radius: 2px;
  text-align: center;
  transition: .2s;
}
checkbox:hover:before {
  content: '✓';
  color: rgba(97, 141, 194, 0.4);
}
checkbox[checked]:before {
  content: '✓';
  color: #FFF;
  background-color: #618dc2;
}
checkbox[disabled] {
  color: #b4b4b4;
  cursor: default;
}
checkbox[disabled]:before {
  border-color: #DDD;
}
checkbox[disabled]:hover:before {
  color: #FFF;
}
checkbox[disabled][checked]:before {
  background-color: #DDD;
}
checkbox:not(:empty):before {
  margin-right: .4em;
}
checkbox + checkbox {
  margin-left: .8em;
}
radio {
  display: inline-block;
  cursor: pointer;
  font-size: 1rem;
}
radio:before {
  content: " ";
  font-weight: bold;
  color: #FFF;
  display: inline-block;
  width: 1em;
  height: 1em;
  line-height: 1em;
  background-color: #FFF;
  border: 1px solid #618dc2;
  border-radius: 1rem;
  text-align: center;
  transition: .2s;
}
radio:hover:before {
  content: '✓';
  color: rgba(97, 141, 194, 0.4);
}
radio[checked]:before {
  content: '✓';
  color: #FFF;
  background-color: #618dc2;
}
radio[disabled] {
  color: #b4b4b4;
  cursor: default;
}
radio[disabled]:before {
  border-color: #DDD;
}
radio[disabled]:hover:before {
  color: #FFF;
}
radio[disabled][checked]:before {
  background-color: #DDD;
}
radio:not(:empty):before {
  margin-right: .4em;
}
radio + radio {
  margin-left: .8em;
}
button {
  outline: none;
  border-radius: 4px;
  transition: .2s;
  font-size: 1rem;
  height: 2.22em;
  line-height: 1em;
  background-color: #CCC;
  color: #000000;
  box-sizing: border-box;
  padding: 0 .8em;
  cursor: pointer;
  letter-spacing: .1em;
  text-indent: .1em;
  border: none;
}
button.small {
  font-size: .88rem;
}
button.big {
  font-size: 1.24rem;
}
button:hover {
  background-color: #d6d6d6;
}
button:active {
  box-shadow: 0 0 4px #c2c2c2 inset;
}
button.primary {
  background-color: #618dc2;
  color: #ffffff;
}
button.primary:hover {
  background-color: #7098c8;
}
button.primary:active {
  box-shadow: 0 0 4px #5282bc inset;
}
button.danger {
  background-color: #D00;
  color: #ffffff;
}
button.danger:hover {
  background-color: #f10000;
}
button.danger:active {
  box-shadow: 0 0 4px #c90000 inset;
}
button[disabled] {
  background-color: #DDD !important;
  color: #000000 !important;
  cursor: default !important;
  color: #b4b4b4 !important;
}
button[disabled]:hover {
  background-color: #e7e7e7 !important;
}
button[disabled]:active {
  box-shadow: 0 0 4px #d3d3d3 inset !important;
}
button[disabled]:hover {
  background-color: #DDD !important;
}
button[disabled]:active {
  box-shadow: none !important;
}
/* pagination */
pagination {
  display: block;
  text-align: center;
}
pagination > span {
  margin-right: 8px;
}
pagination > span:empty {
  display: none;
}
pagination > pagebar {
  display: inline-block;
}
pagination > pagebar > button {
  border-radius: 0;
  min-width: 48px;
}
pagination > pagebar > button:first-child {
  border-radius: 4px 0 0 4px;
}
pagination > pagebar > button:last-child {
  border-radius: 0 4px 4px 0;
}
pagination > pagebar > button:only-child {
  border-radius: 4px;
}
pagination > pagebar > button.current {
  border-color: #618dc2;
  background: #618dc2;
}
/* layer */
layer {
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 999;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
layer:last-child {
  background-color: rgba(0, 0, 0, 0.64);
}
layer.ng-enter,
layer.ng-leave {
  transition: ease 0.4s background-color;
}
layer.ng-enter {
  background-color: transparent;
}
layer.ng-enter.ng-enter-active {
  background-color: rgba(0, 0, 0, 0.64);
}
layer.ng-leave {
  background-color: rgba(0, 0, 0, 0.64);
}
layer.ng-leave.ng-leave-active {
  background-color: transparent;
}
layer:not(:last-child) {
  background-color: transparent !important;
}
layer ~ layer:last-child {
  background-color: rgba(0, 0, 0, 0.64) !important;
}
/* dialogue */
dialogue {
  max-width: 100%;
  background: #FFF;
  border-radius: 4px;
  box-shadow: 1px 3px 3px 0 rgba(0, 0, 0, 0.2), 1px 3px 15px 2px rgba(0, 0, 0, 0.2);
  flex-direction: column;
  display: none;
}
dialogue.ng-enter,
dialogue.ng-leave {
  transition: ease 0.4s all;
}
dialogue.ng-enter {
  opacity: 0;
  transform: scale(0.8);
}
dialogue.ng-enter.ng-enter-active {
  opacity: 1;
  transform: scale(1);
}
dialogue.ng-leave {
  opacity: 1;
  transform: scale(1);
}
dialogue.ng-leave.ng-leave-active {
  opacity: 0;
  transform: scale(0.6);
}
dialogue > header {
  padding: .72em 1em;
  font-size: 1.2rem;
  letter-spacing: .1em;
  background-color: #618dc2;
  border-radius: 4px 4px 0 0;
  color: #ffffff;
}
dialogue > .content {
  padding: 1em;
  flex-grow: 1;
  overflow: auto;
}
dialogue > .content.message {
  padding: 2em;
  min-width: 240px;
  max-width: 400px;
}
dialogue > footer {
  display: flex;
  flex-direction: row;
  border-radius: 0 0 4px 4px;
  justify-content: flex-end;
  padding: .4em;
}
dialogue > footer > button {
  margin-left: .4em;
}
layer > dialogue {
  display: flex;
}
/* Layout */
linear {
  display: flex;
}
linear.vertical {
  flex-direction: column;
}
linear.end {
  justify-content: flex-end;
}
linear > .stretch {
  flex-grow: 1;
  overflow: auto;
}
