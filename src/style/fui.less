@charset "UTF-8";

@primaryColor: #00aac2;
@borderRadius: 2px;
@animateDuration: .4s;
@space: " ";

/* reset */
html {
	box-sizing: border-box;
	font: normal 14px 'Microsoft YaHei UI', 'Microsoft YaHei UI Light', 'sans-serif';
	color: #222;
	background-color: #f1f1f1;
}
body {
	margin: 0;
	padding: 0;
	font-size: 1rem;
}
h1, h2, h3, h4, h5, h6, p {
	margin: 0;
	padding: 0;
	font-size: 1rem;
	font-weight: normal;
}
ul, ol {
	margin: 0;
	padding: 0;
	list-style: none;
}
a {
	text-decoration: none;
}
/*element*/
.inlineElement(@padding) {
	box-sizing: border-box;
	outline: none;
	border-radius: @borderRadius;
	font-size: 1rem;
	height: 2.5rem;
	line-height: 2.5rem;
	padding: 0 @padding;
	&.small, .small & {
		font-size: 1rem;
		padding: 0 (@padding * 0.6);
		height: 2rem;
		line-height: 2rem;
	}
	&.big, .big & {
		font-size: 1.2rem;
		padding: 0 (@padding * 1.5);
		height: 3rem;
		line-height: 2.4em;
	}
}
input {
	.inlineElement(.6rem);
	border: 1px solid #CCC;
	transition: .2s border-color;

	&:focus {
		border-color: @primaryColor;
	}

	&[type=checkbox],
	&[type=radio] {
		height: auto;
	}
}
button {
	@defaultColor: #CCC;
	@dangerColor: #D00;
	@disabledColor: #DDD;

	.setColors(@color) {
		background-color: @color;
		color: contrast(@color);
		&:hover {
			background-color: lighten(@color, 4%);
		}
		&:active {
			box-shadow: 0 0 4px darken(@color, 4%) inset;
		}
	}

	.inlineElement(1.2rem);
	.setColors(@defaultColor);
	cursor: pointer;
	border: none;
	transition: background-color .2s;

	&.primary {
		.setColors(@primaryColor);
	}

	&.danger {
		.setColors(@dangerColor);
	}

	&[disabled] {
		.setColors(@disabledColor) !important;
		cursor: default !important;
		color: darken(@disabledColor, 16%) !important;
		&:hover {
			background-color: @disabledColor !important;
		}
		&:active {
			box-shadow: none !important;
		}
	}

}
.checkable(@radius) {
	.inlineElement(0);
	display: inline-block;
	cursor: pointer;

	&:before {
		content: @space;
		font-weight: bold;
		color: #FFF;
		display: inline-block;
		width: 1em;
		height: 1em;
		line-height: 1em;
		background-color: #FFF;
		border: 1px solid @primaryColor;
		border-radius: @radius;
		text-align: center;
		transition: .2s;
	}

	&:hover:before {
		content: '✓';
		color: fadeout(@primaryColor, 60%);
	}

	&[checked] {
		&:before {
			content: '✓';
			color: #FFF;
			background-color: @primaryColor;
		}
	}

	@disabledColor: #DDD;

	&[disabled] {
		color: darken(@disabledColor, 16%);
		cursor: default;
		&:before {
			border-color: @disabledColor;
		}
		&:hover:before {
			color: #FFF;
		}
		&[checked]:before {
			background-color: @disabledColor;
		}
	}

	&:not(:empty):before {
		margin-right: .4em;
	}

	& + & {
		margin-left: .8em;
	}
}
checkbox {
	.checkable(2px);
}
radio {
	.checkable(1rem);
}
/* paper */
.paper {
	background: #FFF;
	border-radius: 2px;
	box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
}
/* table */
table {
	width: 100%;
	border-collapse: separate;
	border-spacing: 1px;
	background: #DDD;
	border-radius: @borderRadius;

	th {
		padding: 4px;
		background: #FFF;
		height: 32px;
	}

	td {
		padding: 4px;
		background: #FFF;
		text-align: center;
		height: 32px;

		> img {
			vertical-align: middle;
		}
	}

	thead > tr:first-child > :first-child {
		border-radius: @borderRadius 0 0 0;
	}

	thead > tr:first-child > :last-child {
		border-radius: 0 @borderRadius 0 0;
	}

	tbody > tr:last-child > :first-child {
		border-radius: 0 0 0 @borderRadius;
	}

	tbody > tr:last-child > :last-child {
		border-radius: 0 0 @borderRadius 0;
	}
}
/* pagination */
pagination {
	display: block;
	text-align: center;
	& > span {
		margin-right: 8px;
		&:empty {
			display: none;
		}
	}
	& > pagebar {
		display: inline-block;
		& > button {
			border-radius: 0;
			min-width: 48px;
			&:first-child {
				border-radius: @borderRadius 0 0 @borderRadius;
			}
			&:last-child {
				border-radius: 0 @borderRadius @borderRadius 0;
			}
			&:only-child {
				border-radius: @borderRadius;
			}
			&.current {
				border-color: @primaryColor;
				background: @primaryColor;
				color: contrast(@primaryColor);
			}
		}
	}
}
/* dialogue */
dialogue {
	display: none;
}
dialogue-wrapper {
	position: fixed;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	z-index: 999;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	transition: background-color @animateDuration ease;

	&.dimmer {
		background-color: rgba(0, 0, 0, .5);
	}

	> dialogue {
		.paper;
		flex-direction: column;
		display: flex;
		overflow: hidden;
		box-shadow: 0 0 16px rgba(0, 0, 0, 0.12), 0 16px 16px rgba(0, 0, 0, 0.24);

		&.ng-enter, &.ng-leave {
			transition: all (@animateDuration / 2) ease;
		}

		&.ng-enter {
			opacity: 0;
			transform: scale(.96);
			&.ng-enter-active {
				opacity: 1;
				transform: scale(1);
			}
		}

		&.ng-leave {
			opacity: 1;
			transform: scale(1);
			&.ng-leave-active {
				opacity: 0;
				transform: scale(.9);
			}
		}

		> header {
			padding: 1rem;
			font-size: 1.16rem;
			color: #000;
			flex-shrink: 0;
		}

		> .content {
			padding: 1rem;
			flex-grow: 1;
			overflow: auto;

			&.message {
				min-width: 320px;
				max-width: 480px;
			}
		}

		> footer {
			display: flex;
			flex-direction: row-reverse;
			justify-content: flex-start;
			padding: 1rem;
			flex-shrink: 0;

			> button {
				margin-left: .5rem;
			}
		}
	}
}
/* Prompt */
prompt {
	position: fixed;
	left: 0;
	right: 0;
	margin: auto;
	bottom: 12%;
	z-index: 9999;
	background: #222;
	color: #FFF;
	padding: 8px 16px;
	border-radius: @borderRadius;
	box-shadow: 0 0 16px rgba(0, 0, 0, 0.12), 0 16px 16px rgba(0, 0, 0, 0.24);
	transition: all @animateDuration ease;

	&.spin {
		box-shadow: 0 0 2px rgba(0, 0, 0, 0.04), 0 2px 2px rgba(0, 0, 0, 0.04);
		transform: rotateY(90deg);
	}
}
/* Layout */
.linear {
	display: flex;
	align-items: stretch;
	&.vertical {
		flex-direction: column;
	}
	&.center {
		justify-content: center;
		align-items: center;
	}
	> :not(.stretch) {
		flex-shrink: 0;
	}
	> .stretch {
		flex-grow: 1;
		overflow: auto;
	}
}