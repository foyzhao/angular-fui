@charset "UTF-8";

@primaryColor: #618dc2;
@borderRadius: 4px;
@animateDuration: .4s;
@space: " ";

/* reset */
html {
	box-sizing: border-box;
	font: normal 14px 'Microsoft YaHei UI', 'Microsoft YaHei UI Light', 'sans-serif';
}
body {
	margin: 0;
	padding: 0;
	font-size: 1rem;
}
h1, h2, h3, h4, h5, h6, p {
	margin: 0;
	padding: 0;
	font-size: 1rem;
}
ul, ol {
	margin: 0;
	padding: 0;
	list-style: none;
}
/*element*/
.inlineElement() {
	outline: none;
	border-radius: @borderRadius;
	transition: .2s;
	font-size: 1rem;
	height: 2.22em;
	line-height: 1em;
	&.small {
		font-size: .88rem;
	}
	&.big {
		font-size: 1.24rem;
	}
}
input {
	.inlineElement();
	box-sizing: border-box;
	padding: 0 .6em;
	border: 1px solid #CCC;

	&:focus {
		border-color: @primaryColor;
	}

	&[type=checkbox],
	&[type=radio] {
		height: auto;
	}
}
.checkable(@radius) {
	display: inline-block;
	cursor: pointer;
	font-size: 1rem;

	&:before {
		content: @space;
		font-weight: bold;
		color: #FFF;
		display: inline-block;
		width: 1em;
		height: 1em;
		line-height: 1em;
		background-color: #FFF;
		border: 1px solid @primaryColor;
		border-radius: @radius;
		text-align: center;
		transition: .2s;
	}

	&:hover:before {
		content: '✓';
		color: fadeout(@primaryColor, 60%);
	}

	&[checked] {
		&:before {
			content: '✓';
			color: #FFF;
			background-color: @primaryColor;
		}
	}

	@disabledColor: #DDD;

	&[disabled] {
		color: darken(@disabledColor, 16%);
		cursor: default;
		&:before {
			border-color: @disabledColor;
		}
		&:hover:before {
			color: #FFF;
		}
		&[checked]:before {
			background-color: @disabledColor;
		}
	}

	&:not(:empty):before {
		margin-right: .4em;
	}

	& + & {
		margin-left: .8em;
	}
}
checkbox {
	.checkable(2px);
}
radio {
	.checkable(1rem);
}
button {
	@defaultColor: #CCC;
	@dangerColor: #D00;
	@disabledColor: #DDD;

	.setColors(@color) {
		background-color: @color;
		color: contrast(@color);
		&:hover {
			background-color: lighten(@color, 4%);
		}
		&:active {
			box-shadow: 0 0 4px darken(@color, 4%) inset;
		}
	}

	.inlineElement();
	.setColors(@defaultColor);
	box-sizing: border-box;
	padding: 0 .8em;
	cursor: pointer;
	letter-spacing: .1em;
	text-indent: .1em;
	border: none;

	&.primary {
		.setColors(@primaryColor);
	}

	&.danger {
		.setColors(@dangerColor);
	}

	&[disabled] {
		.setColors(@disabledColor) !important;
		cursor: default !important;
		color: darken(@disabledColor, 16%) !important;
		&:hover {
			background-color: @disabledColor !important;
		}
		&:active {
			box-shadow: none !important;
		}
	}

}
/* pagination */
pagination {
	display: block;
	text-align: center;
	& > span {
		margin-right: 8px;
		&:empty {
			display: none;
		}
	}
	& > pagebar {
		display: inline-block;
		& > button {
			border-radius: 0;
			min-width: 48px;
			&:first-child {
				border-radius: @borderRadius 0 0 @borderRadius;
			}
			&:last-child {
				border-radius: 0 @borderRadius @borderRadius 0;
			}
			&:only-child {
				border-radius: @borderRadius;
			}
			&.current {
				border-color: @primaryColor;
				background: @primaryColor;
			}
		}
	}
}
/* layer */
layer {
	@backgroundColor: rgba(0, 0, 0, .64);
	position: fixed;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	z-index: 999;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	&:last-child {
		background-color: @backgroundColor;
	}

	&.ng-enter, &.ng-leave {
		transition: ease @animateDuration background-color;
	}

	&.ng-enter {
		background-color: transparent;
		&.ng-enter-active {
			background-color: @backgroundColor;
		}
	}

	&.ng-leave {
		background-color: @backgroundColor;
		&.ng-leave-active {
			background-color: transparent;
		}
	}

	&:not(:last-child) {
		background-color: transparent !important;
	}

	& ~ &:last-child {
		background-color: @backgroundColor !important;
	}
}
/* dialogue */
dialogue {
	@dividerColor: #DDD;
	max-width: 100%;
	background: #FFF;
	border-radius: @borderRadius;
	box-shadow: 1px 3px 3px 0 rgba(0, 0, 0, .2), 1px 3px 15px 2px rgba(0, 0, 0, .2);
	flex-direction: column;
	display: none;

	&.ng-enter, &.ng-leave {
		transition: ease @animateDuration all;
	}

	&.ng-enter {
		opacity: 0;
		transform: scale(.8);
		&.ng-enter-active {
			opacity: 1;
			transform: scale(1);
		}
	}

	&.ng-leave {
		opacity: 1;
		transform: scale(1);
		&.ng-leave-active {
			opacity: 0;
			transform: scale(.6);
		}
	}

	> header {
		padding: .72em 1em;
		font-size: 1.2rem;
		letter-spacing: .1em;
		background-color: @primaryColor;
		border-radius: @borderRadius @borderRadius 0 0;
		color: contrast(@primaryColor);
	}

	> .content {
		padding: 1em;
		flex-grow: 1;
		overflow: auto;

		&.message {
			padding: 2em;
			min-width: 240px;
			max-width: 400px;
		}
	}

	> footer {
		display: flex;
		flex-direction: row;
		border-radius: 0 0 @borderRadius @borderRadius;
		justify-content: flex-end;
		padding: .4em;

		> button {
			margin-left: .4em;
		}
	}
}
layer > dialogue { display: flex; }
/* Layout */
linear {
	display: flex;

	&.vertical {
		flex-direction: column;
	}

	&.end {
		justify-content: flex-end;
	}

	> .stretch {
		flex-grow: 1;
		overflow: auto;
	}
}